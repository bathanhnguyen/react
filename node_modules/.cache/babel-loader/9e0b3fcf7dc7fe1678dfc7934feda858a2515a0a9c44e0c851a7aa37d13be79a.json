{"ast":null,"code":"// import axios from 'axios';\n// import React, { useState, useEffect } from 'react';\n// import DatePicker from 'react-datepicker';\n// import 'react-datepicker/dist/react-datepicker.css';\n// import styled from 'styled-components';\n\n// function BookingForm() {\n//     const [fromDate, setFromDate] = useState(null);\n//     const [toDate, setToDate] = useState(null);\n//     const [bookedDates, setBookedDates] = useState([]);\n\n//     useEffect(() => {\n//         let config = {\n//             method: 'get',\n//             maxBodyLength: Infinity,\n//             url: `http://localhost/car/KLTN/carrentalAPI/Get_DateBooking.php?vid=2`,\n//             headers: {},\n//         };\n\n//         axios\n//             .request(config)\n//             .then((response) => {\n//                 if (response.data.status === '200') {\n//                     setBookedDates(response.data.date);\n//                 }\n//             })\n//             .catch((error) => {\n//                 console.log(error);\n//             });\n//     }, []);\n\n//     const handleFromDateChange = (date) => {\n//         setFromDate(date);\n//         setToDate(null); // Reset toDate when changing fromDate\n//     };\n\n//     const handleToDateChange = (date) => {\n//         setToDate(date);\n//     };\n\n//     const handleBooking = () => {\n//         console.log('From Date:', fromDate);\n//         console.log('To Date:', toDate);\n//     };\n\n//     const isBookedDate = (date) => {\n//         return bookedDates.includes(date);\n//     };\n\n//     const renderDay = (day) => {\n//         const isBooked = isBookedDate(day.toISOString().split('T')[0]);\n//         const isFutureDay = day > new Date();\n\n//         const dayClassName = isBooked ? 'booked-day' : '';\n//         const additionalClass = isFutureDay ? '' : 'disabled-day';\n\n//         return (\n//             <div className={`custom-day ${dayClassName} ${additionalClass}`}>\n//                 {day.getDate()}\n//             </div>\n//         );\n//     };\n\n//     const excludeDates = bookedDates.map((date) => new Date(date));\n//     const today = new Date();\n//     const minDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n\n//     const filterPassedDate = (date) => {\n//         return date > fromDate || !fromDate; // Hiển thị ngày sau fromDate hoặc không có fromDate\n//     };\n\n//     return (\n//         <BookDiv>\n//             <div className=\"form-group\">\n//                 <label>From Date:</label>\n\n//                 <DatePicker\n//                     selectsStart\n//                     selected={fromDate}\n//                     minDate={minDate}\n//                     startDate={fromDate}\n//                     endDate={toDate}\n//                     onChange={handleFromDateChange}\n//                     renderDay={renderDay}\n//                     excludeDates={excludeDates}\n//                     className=\"form-control\"\n//                     name=\"fromdate\"\n\n//                     placeholderText=\"Chọn ngày nhận xe\"\n//                 />\n//             </div>\n\n//             <div className=\"form-group\">\n//                 <label>To Date:</label>\n\n//                 <DatePicker\n//                     selectsEnd\n//                     selected={toDate}\n//                     minDate={fromDate || minDate} // Chỉ cho phép chọn ngày từ fromDate trở đi\n//                     startDate={fromDate}\n//                     endDate={toDate}\n//                     onChange={handleToDateChange}\n//                     renderDay={renderDay}\n//                     className=\"form-control\"\n//                     name=\"todate\"\n//                     placeholderText=\"Chọn ngày trả xe\"\n//                     filterDate={filterPassedDate}\n//                 />\n//             </div>\n\n//             <button onClick={handleBooking}>Booking</button>\n//         </BookDiv>\n//     );\n// }\n\n// const BookDiv = styled.div`\n//         .form-label {\n//           margin-bottom: 0.5rem;\n//         }\n\n//         .form-control {\n//           border: 1px solid #ced4da;\n//           border-radius: 0.25rem;\n//           padding: 0.375rem 0.75rem;\n//           line-height: 1.5;\n//         }\n\n//         .custom-day.disabled-day {\n//           background-color: #f8d7da;\n//           color: #721c24;\n//           cursor: not-allowed;\n//         }\n//       `;\n\n// export default BookingForm;","map":{"version":3,"names":[],"sources":["C:/Users/win10/Desktop/Khoaluantotnghiep/KLTN-react/src/components/Pages/test.js"],"sourcesContent":["// import axios from 'axios';\r\n// import React, { useState, useEffect } from 'react';\r\n// import DatePicker from 'react-datepicker';\r\n// import 'react-datepicker/dist/react-datepicker.css';\r\n// import styled from 'styled-components';\r\n\r\n// function BookingForm() {\r\n//     const [fromDate, setFromDate] = useState(null);\r\n//     const [toDate, setToDate] = useState(null);\r\n//     const [bookedDates, setBookedDates] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         let config = {\r\n//             method: 'get',\r\n//             maxBodyLength: Infinity,\r\n//             url: `http://localhost/car/KLTN/carrentalAPI/Get_DateBooking.php?vid=2`,\r\n//             headers: {},\r\n//         };\r\n\r\n//         axios\r\n//             .request(config)\r\n//             .then((response) => {\r\n//                 if (response.data.status === '200') {\r\n//                     setBookedDates(response.data.date);\r\n//                 }\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.log(error);\r\n//             });\r\n//     }, []);\r\n\r\n//     const handleFromDateChange = (date) => {\r\n//         setFromDate(date);\r\n//         setToDate(null); // Reset toDate when changing fromDate\r\n//     };\r\n\r\n//     const handleToDateChange = (date) => {\r\n//         setToDate(date);\r\n//     };\r\n\r\n//     const handleBooking = () => {\r\n//         console.log('From Date:', fromDate);\r\n//         console.log('To Date:', toDate);\r\n//     };\r\n\r\n//     const isBookedDate = (date) => {\r\n//         return bookedDates.includes(date);\r\n//     };\r\n\r\n//     const renderDay = (day) => {\r\n//         const isBooked = isBookedDate(day.toISOString().split('T')[0]);\r\n//         const isFutureDay = day > new Date();\r\n\r\n//         const dayClassName = isBooked ? 'booked-day' : '';\r\n//         const additionalClass = isFutureDay ? '' : 'disabled-day';\r\n\r\n//         return (\r\n//             <div className={`custom-day ${dayClassName} ${additionalClass}`}>\r\n//                 {day.getDate()}\r\n//             </div>\r\n//         );\r\n//     };\r\n\r\n//     const excludeDates = bookedDates.map((date) => new Date(date));\r\n//     const today = new Date();\r\n//     const minDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n\r\n//     const filterPassedDate = (date) => {\r\n//         return date > fromDate || !fromDate; // Hiển thị ngày sau fromDate hoặc không có fromDate\r\n//     };\r\n\r\n//     return (\r\n//         <BookDiv>\r\n//             <div className=\"form-group\">\r\n//                 <label>From Date:</label>\r\n\r\n//                 <DatePicker\r\n//                     selectsStart\r\n//                     selected={fromDate}\r\n//                     minDate={minDate}\r\n//                     startDate={fromDate}\r\n//                     endDate={toDate}\r\n//                     onChange={handleFromDateChange}\r\n//                     renderDay={renderDay}\r\n//                     excludeDates={excludeDates}\r\n//                     className=\"form-control\"\r\n//                     name=\"fromdate\"\r\n\r\n//                     placeholderText=\"Chọn ngày nhận xe\"\r\n//                 />\r\n//             </div>\r\n\r\n\r\n//             <div className=\"form-group\">\r\n//                 <label>To Date:</label>\r\n\r\n//                 <DatePicker\r\n//                     selectsEnd\r\n//                     selected={toDate}\r\n//                     minDate={fromDate || minDate} // Chỉ cho phép chọn ngày từ fromDate trở đi\r\n//                     startDate={fromDate}\r\n//                     endDate={toDate}\r\n//                     onChange={handleToDateChange}\r\n//                     renderDay={renderDay}\r\n//                     className=\"form-control\"\r\n//                     name=\"todate\"\r\n//                     placeholderText=\"Chọn ngày trả xe\"\r\n//                     filterDate={filterPassedDate}\r\n//                 />\r\n//             </div>\r\n\r\n\r\n\r\n//             <button onClick={handleBooking}>Booking</button>\r\n//         </BookDiv>\r\n//     );\r\n// }\r\n\r\n// const BookDiv = styled.div`\r\n//         .form-label {\r\n//           margin-bottom: 0.5rem;\r\n//         }\r\n      \r\n//         .form-control {\r\n//           border: 1px solid #ced4da;\r\n//           border-radius: 0.25rem;\r\n//           padding: 0.375rem 0.75rem;\r\n//           line-height: 1.5;\r\n//         }\r\n      \r\n//         .custom-day.disabled-day {\r\n//           background-color: #f8d7da;\r\n//           color: #721c24;\r\n//           cursor: not-allowed;\r\n//         }\r\n//       `;\r\n\r\n// export default BookingForm;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}