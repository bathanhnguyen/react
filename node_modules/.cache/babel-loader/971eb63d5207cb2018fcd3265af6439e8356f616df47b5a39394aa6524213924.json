{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win10\\\\Desktop\\\\Khoaluantotnghiep\\\\KLTN-react\\\\src\\\\components\\\\Pages\\\\test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookingForm() {\n  _s();\n  const [fromDate, setFromDate] = useState(null);\n  const [toDate, setToDate] = useState(null);\n  const [bookedDates, setBookedDates] = useState([]);\n  useEffect(() => {\n    // Gọi API để lấy danh sách ngày đã được thuê\n    fetchBookedDates();\n  }, []);\n  const fetchBookedDates = () => {\n    // Gọi API và nhận phản hồi\n    // Đoạn mã này chỉ là một mô phỏng, bạn cần thay thế bằng kết nối thực tế đến API của bạn\n    const apiResponse = {\n      date: [{\n        FromDate: '2023-05-11',\n        ToDate: '2023-05-13'\n      }, {\n        FromDate: '2023-05-14',\n        ToDate: '2023-05-15'\n      }],\n      status: '200'\n    };\n\n    // Kiểm tra phản hồi từ API\n    if (apiResponse.status === '200') {\n      const {\n        date\n      } = apiResponse;\n      setBookedDates(date);\n    }\n  };\n  const handleFromDateChange = date => {\n    setFromDate(date);\n  };\n  const handleToDateChange = date => {\n    setToDate(date);\n  };\n  const handleBooking = () => {\n    // Thực hiện logic booking tại đây\n    console.log('From Date:', fromDate);\n    console.log('To Date:', toDate);\n  };\n  const isBookedDate = date => {\n    return bookedDates.some(booking => isDateInRange(date, new Date(booking.FromDate), new Date(booking.ToDate)));\n  };\n  const isDateInRange = (date, rangeStart, rangeEnd) => {\n    return date >= rangeStart && date <= rangeEnd;\n  };\n  const renderDay = day => {\n    const isBooked = isBookedDate(day);\n    const dayClassName = isBooked ? 'booked-day' : '';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `custom-day ${dayClassName}`,\n      children: day.getDate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Booking Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fromDate\",\n        children: \"From Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        id: \"fromDate\",\n        selected: fromDate,\n        onChange: handleFromDateChange,\n        renderDay: renderDay,\n        excludeDates: bookedDates.flatMap(booking => {\n          const fromDate = new Date(booking.FromDate);\n          const toDate = new Date(booking.ToDate);\n          const datesInRange = [];\n          const currentDate = fromDate;\n          while (currentDate <= toDate) {\n            datesInRange.push(currentDate);\n            currentDate.setDate(currentDate.getDate() + 1);\n          }\n          return datesInRange;\n        }),\n        startDate: fromDate,\n        endDate: toDate,\n        selectsRange: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"toDate\",\n        children: \"To Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        id: \"toDate\",\n        selected: toDate,\n        onChange: handleToDateChange,\n        renderDay: renderDay,\n        excludeDates: bookedDates.flatMap(booking => {\n          const fromDate = new Date(booking.FromDate);\n          const toDate = new Date(booking.ToDate);\n          const datesInRange = [];\n          const currentDate = fromDate;\n          while (currentDate <= toDate) {\n            datesInRange.push(currentDate);\n            currentDate.setDate(currentDate.getDate() + 1);\n          }\n          return datesInRange;\n        }),\n        startDate: fromDate,\n        endDate: toDate,\n        selectsRange: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBooking,\n      children: \"Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(BookingForm, \"XGZV2mww+5zkJLpl0dMP1XbZZUw=\");\n_c = BookingForm;\nexport default BookingForm;\n\n// useEffect(() => {\n//     let config = {\n//         method: \"get\",\n//         maxBodyLength: Infinity,\n//         url: `http://localhost/car/KLTN/carrentalAPI/Get_DateBooking.php?vid=2`,\n//         headers: {},\n//     };\n\n//     axios\n//         .request(config)\n//         .then((response) => {\n//             // console.log(JSON.stringify(response));\n//             // setVehiclesBrand(response.data.carDetail[0].VehiclesBrand)\n//             if (response.data.status === \"200\") {\n//                 const bookedDateRanges = response.data.date.map((booking) => {\n//                     return {\n//                         fromDate: new Date(booking.FromDate),\n//                         toDate: new Date(booking.ToDate),\n//                     };\n//                 });\n//                 setBookedDates(bookedDateRanges);\n//             }\n//         })\n//         .catch((error) => {\n//             console.log(error);\n//         });\n// }, []);\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","jsxDEV","_jsxDEV","BookingForm","_s","fromDate","setFromDate","toDate","setToDate","bookedDates","setBookedDates","fetchBookedDates","apiResponse","date","FromDate","ToDate","status","handleFromDateChange","handleToDateChange","handleBooking","console","log","isBookedDate","some","booking","isDateInRange","Date","rangeStart","rangeEnd","renderDay","day","isBooked","dayClassName","className","children","getDate","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","selected","onChange","excludeDates","flatMap","datesInRange","currentDate","push","setDate","startDate","endDate","selectsRange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/win10/Desktop/Khoaluantotnghiep/KLTN-react/src/components/Pages/test.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction BookingForm() {\r\n    const [fromDate, setFromDate] = useState(null);\r\n    const [toDate, setToDate] = useState(null);\r\n    const [bookedDates, setBookedDates] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Gọi API để lấy danh sách ngày đã được thuê\r\n        fetchBookedDates();\r\n    }, []);\r\n\r\n    const fetchBookedDates = () => {\r\n        // Gọi API và nhận phản hồi\r\n        // Đoạn mã này chỉ là một mô phỏng, bạn cần thay thế bằng kết nối thực tế đến API của bạn\r\n        const apiResponse = {\r\n            date: [\r\n                { FromDate: '2023-05-11', ToDate: '2023-05-13' },\r\n                { FromDate: '2023-05-14', ToDate: '2023-05-15' },\r\n            ],\r\n            status: '200',\r\n        };\r\n\r\n        // Kiểm tra phản hồi từ API\r\n        if (apiResponse.status === '200') {\r\n            const { date } = apiResponse;\r\n            setBookedDates(date);\r\n        }\r\n    };\r\n\r\n    const handleFromDateChange = (date) => {\r\n        setFromDate(date);\r\n    };\r\n\r\n    const handleToDateChange = (date) => {\r\n        setToDate(date);\r\n    };\r\n\r\n    const handleBooking = () => {\r\n        // Thực hiện logic booking tại đây\r\n        console.log('From Date:', fromDate);\r\n        console.log('To Date:', toDate);\r\n    };\r\n\r\n    const isBookedDate = (date) => {\r\n        return bookedDates.some((booking) =>\r\n            isDateInRange(date, new Date(booking.FromDate), new Date(booking.ToDate))\r\n        );\r\n    };\r\n\r\n    const isDateInRange = (date, rangeStart, rangeEnd) => {\r\n        return date >= rangeStart && date <= rangeEnd;\r\n    };\r\n\r\n    const renderDay = (day) => {\r\n        const isBooked = isBookedDate(day);\r\n\r\n        const dayClassName = isBooked ? 'booked-day' : '';\r\n\r\n        return (\r\n            <div className={`custom-day ${dayClassName}`}>\r\n                {day.getDate()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>Booking Form</h3>\r\n            <div>\r\n                <label htmlFor=\"fromDate\">From Date:</label>\r\n                <DatePicker\r\n                    id=\"fromDate\"\r\n                    selected={fromDate}\r\n                    onChange={handleFromDateChange}\r\n                    renderDay={renderDay}\r\n                    excludeDates={bookedDates.flatMap((booking) => {\r\n                        const fromDate = new Date(booking.FromDate);\r\n                        const toDate = new Date(booking.ToDate);\r\n                        const datesInRange = [];\r\n                        const currentDate = fromDate;\r\n\r\n                        while (currentDate <= toDate) {\r\n                            datesInRange.push(currentDate);\r\n                            currentDate.setDate(currentDate.getDate() + 1);\r\n                        }\r\n\r\n                        return datesInRange;\r\n                    })}\r\n                    startDate={fromDate}\r\n                    endDate={toDate}\r\n                    selectsRange\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"toDate\">To Date:</label>\r\n                <DatePicker\r\n                    id=\"toDate\"\r\n                    selected={toDate}\r\n                    onChange={handleToDateChange}\r\n                    renderDay={renderDay}\r\n                    excludeDates={bookedDates.flatMap((booking) => {\r\n                        const fromDate = new Date(booking.FromDate);\r\n                        const toDate = new Date(booking.ToDate);\r\n                        const datesInRange = [];\r\n                        const currentDate = fromDate;\r\n\r\n                        while (currentDate <= toDate) {\r\n                            datesInRange.push(currentDate);\r\n                            currentDate.setDate(currentDate.getDate() + 1);\r\n                        }\r\n\r\n                        return datesInRange;\r\n                    })}\r\n                    startDate={fromDate}\r\n                    endDate={toDate}\r\n                    selectsRange\r\n                />\r\n            </div>\r\n            <button onClick={handleBooking}>Booking</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BookingForm;\r\n\r\n\r\n\r\n\r\n\r\n// useEffect(() => {\r\n//     let config = {\r\n//         method: \"get\",\r\n//         maxBodyLength: Infinity,\r\n//         url: `http://localhost/car/KLTN/carrentalAPI/Get_DateBooking.php?vid=2`,\r\n//         headers: {},\r\n//     };\r\n\r\n//     axios\r\n//         .request(config)\r\n//         .then((response) => {\r\n//             // console.log(JSON.stringify(response));\r\n//             // setVehiclesBrand(response.data.carDetail[0].VehiclesBrand)\r\n//             if (response.data.status === \"200\") {\r\n//                 const bookedDateRanges = response.data.date.map((booking) => {\r\n//                     return {\r\n//                         fromDate: new Date(booking.FromDate),\r\n//                         toDate: new Date(booking.ToDate),\r\n//                     };\r\n//                 });\r\n//                 setBookedDates(bookedDateRanges);\r\n//             }\r\n//         })\r\n//         .catch((error) => {\r\n//             console.log(error);\r\n//         });\r\n// }, []);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}