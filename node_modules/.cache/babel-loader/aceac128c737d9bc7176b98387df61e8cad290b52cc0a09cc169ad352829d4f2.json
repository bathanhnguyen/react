{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win10\\\\Desktop\\\\Khoaluantotnghiep\\\\KLTN-react\\\\src\\\\components\\\\Pages\\\\test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookingForm() {\n  _s();\n  const [fromDate, setFromDate] = useState(null);\n  const [toDate, setToDate] = useState(null);\n  const [bookedDates, setBookedDates] = useState([]);\n  useEffect(() => {\n    fetchBookedDates();\n  }, []);\n  const fetchBookedDates = () => {\n    // Gọi API và nhận phản hồi\n    // Đoạn mã này chỉ là một mô phỏng, bạn cần thay thế bằng kết nối thực tế đến API của bạn\n    const apiResponse = {\n      date: [\"2023-05-16\", \"2023-05-17\", \"2023-05-18\", \"2023-05-19\", \"2023-05-18\", \"2023-05-19\", \"2023-05-20\", \"2023-05-21\", \"2023-05-22\"],\n      status: '200'\n    };\n    if (apiResponse.status === '200') {\n      setBookedDates(apiResponse.date);\n    }\n  };\n  const handleFromDateChange = date => {\n    setFromDate(date);\n  };\n  const handleToDateChange = date => {\n    setToDate(date);\n  };\n  const handleBooking = () => {\n    console.log('From Date:', fromDate);\n    console.log('To Date:', toDate);\n  };\n  const isBookedDate = date => {\n    return bookedDates.includes(date);\n  };\n  const renderDay = day => {\n    const isBooked = isBookedDate(day.toISOString().split('T')[0]);\n    const isFutureDay = day > new Date();\n    const dayClassName = isBooked ? 'booked-day' : '';\n    const additionalClass = isFutureDay ? '' : 'disabled-day';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `custom-day ${dayClassName} ${additionalClass}`,\n      children: day.getDate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  };\n  const excludeDates = bookedDates.map(date => new Date(date));\n  const today = new Date();\n  const minDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n  return /*#__PURE__*/_jsxDEV(BookDiv, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Booking Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fromDate\",\n        className: \"form-label\",\n        children: \"From Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          id: \"fromDate\",\n          selected: fromDate,\n          onChange: handleFromDateChange,\n          renderDay: renderDay,\n          excludeDates: excludeDates,\n          minDate: minDate,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"toDate\",\n        className: \"form-label\",\n        children: \"To Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          id: \"toDate\",\n          selected: toDate,\n          onChange: handleToDateChange,\n          renderDay: renderDay,\n          excludeDates: excludeDates,\n          minDate: minDate,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBooking,\n      children: \"Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(BookingForm, \"XGZV2mww+5zkJLpl0dMP1XbZZUw=\");\n_c = BookingForm;\nexport default BookingForm;\nconst BookDiv = styled.div`\n.form-label {\n  margin-bottom: 0.5rem;\n}\n\n.form-control {\n  border: 1px solid #ced4da;\n  border-radius: 0.25rem;\n  padding: 0.375rem 0.75rem;\n  line-height: 1.5;\n}\n\n.custom-day.disabled-day {\n  background-color: #f8d7da;\n  color: #721c24;\n  cursor: not-allowed;\n}`;\n\n// useEffect(() => {\n//     let config = {\n//         method: \"get\",\n//         maxBodyLength: Infinity,\n//         url: `http://localhost/car/KLTN/carrentalAPI/Get_DateBooking.php?vid=2`,\n//         headers: {},\n//     };\n\n//     axios\n//         .request(config)\n//         .then((response) => {\n//             // console.log(JSON.stringify(response));\n//             // setVehiclesBrand(response.data.carDetail[0].VehiclesBrand)\n//             if (response.data.status === \"200\") {\n//                 const bookedDateRanges = response.data.date.map((booking) => {\n//                     return {\n//                         fromDate: new Date(booking.FromDate),\n//                         toDate: new Date(booking.ToDate),\n//                     };\n//                 });\n//                 setBookedDates(bookedDateRanges);\n//             }\n//         })\n//         .catch((error) => {\n//             console.log(error);\n//         });\n// }, []);\n_c2 = BookDiv;\nvar _c, _c2;\n$RefreshReg$(_c, \"BookingForm\");\n$RefreshReg$(_c2, \"BookDiv\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","styled","jsxDEV","_jsxDEV","BookingForm","_s","fromDate","setFromDate","toDate","setToDate","bookedDates","setBookedDates","fetchBookedDates","apiResponse","date","status","handleFromDateChange","handleToDateChange","handleBooking","console","log","isBookedDate","includes","renderDay","day","isBooked","toISOString","split","isFutureDay","Date","dayClassName","additionalClass","className","children","getDate","fileName","_jsxFileName","lineNumber","columnNumber","excludeDates","map","today","minDate","getFullYear","getMonth","BookDiv","htmlFor","id","selected","onChange","onClick","_c","div","_c2","$RefreshReg$"],"sources":["C:/Users/win10/Desktop/Khoaluantotnghiep/KLTN-react/src/components/Pages/test.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport styled from 'styled-components';\r\nfunction BookingForm() {\r\n    const [fromDate, setFromDate] = useState(null);\r\n    const [toDate, setToDate] = useState(null);\r\n    const [bookedDates, setBookedDates] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchBookedDates();\r\n    }, []);\r\n\r\n    const fetchBookedDates = () => {\r\n        // Gọi API và nhận phản hồi\r\n        // Đoạn mã này chỉ là một mô phỏng, bạn cần thay thế bằng kết nối thực tế đến API của bạn\r\n        const apiResponse = {\r\n            date: [\"2023-05-16\", \"2023-05-17\", \"2023-05-18\", \"2023-05-19\", \"2023-05-18\", \"2023-05-19\", \"2023-05-20\", \"2023-05-21\", \"2023-05-22\"],\r\n            status: '200',\r\n        };\r\n\r\n        if (apiResponse.status === '200') {\r\n            setBookedDates(apiResponse.date);\r\n        }\r\n    };\r\n\r\n    const handleFromDateChange = (date) => {\r\n        setFromDate(date);\r\n    };\r\n\r\n    const handleToDateChange = (date) => {\r\n        setToDate(date);\r\n    };\r\n\r\n    const handleBooking = () => {\r\n        console.log('From Date:', fromDate);\r\n        console.log('To Date:', toDate);\r\n    };\r\n\r\n    const isBookedDate = (date) => {\r\n        return bookedDates.includes(date);\r\n    };\r\n\r\n    const renderDay = (day) => {\r\n        const isBooked = isBookedDate(day.toISOString().split('T')[0]);\r\n        const isFutureDay = day > new Date();\r\n\r\n        const dayClassName = isBooked ? 'booked-day' : '';\r\n        const additionalClass = isFutureDay ? '' : 'disabled-day';\r\n\r\n        return (\r\n            <div className={`custom-day ${dayClassName} ${additionalClass}`}>\r\n                {day.getDate()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const excludeDates = bookedDates.map(date => new Date(date));\r\n    const today = new Date();\r\n    const minDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n\r\n    return (\r\n        <BookDiv>\r\n            <h3>Booking Form</h3>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"fromDate\" className=\"form-label\">From Date:</label>\r\n                <div className=\"input-container\">\r\n                    <DatePicker\r\n                        id=\"fromDate\"\r\n                        selected={fromDate}\r\n                        onChange={handleFromDateChange}\r\n                        renderDay={renderDay}\r\n                        excludeDates={excludeDates}\r\n                        minDate={minDate}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"toDate\" className=\"form-label\">To Date:</label>\r\n                <div className=\"input-container\">\r\n                    <DatePicker\r\n                        id=\"toDate\"\r\n                        selected={toDate}\r\n                        onChange={handleToDateChange}\r\n                        renderDay={renderDay}\r\n                        excludeDates={excludeDates}\r\n                        minDate={minDate}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <button onClick={handleBooking}>Booking</button>\r\n        </BookDiv>\r\n    );\r\n}\r\n\r\nexport default BookingForm;\r\n\r\nconst BookDiv = styled.div`\r\n.form-label {\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.form-control {\r\n  border: 1px solid #ced4da;\r\n  border-radius: 0.25rem;\r\n  padding: 0.375rem 0.75rem;\r\n  line-height: 1.5;\r\n}\r\n\r\n.custom-day.disabled-day {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n  cursor: not-allowed;\r\n}`\r\n\r\n\r\n// useEffect(() => {\r\n//     let config = {\r\n//         method: \"get\",\r\n//         maxBodyLength: Infinity,\r\n//         url: `http://localhost/car/KLTN/carrentalAPI/Get_DateBooking.php?vid=2`,\r\n//         headers: {},\r\n//     };\r\n\r\n//     axios\r\n//         .request(config)\r\n//         .then((response) => {\r\n//             // console.log(JSON.stringify(response));\r\n//             // setVehiclesBrand(response.data.carDetail[0].VehiclesBrand)\r\n//             if (response.data.status === \"200\") {\r\n//                 const bookedDateRanges = response.data.date.map((booking) => {\r\n//                     return {\r\n//                         fromDate: new Date(booking.FromDate),\r\n//                         toDate: new Date(booking.ToDate),\r\n//                     };\r\n//                 });\r\n//                 setBookedDates(bookedDateRanges);\r\n//             }\r\n//         })\r\n//         .catch((error) => {\r\n//             console.log(error);\r\n//         });\r\n// }, []);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}