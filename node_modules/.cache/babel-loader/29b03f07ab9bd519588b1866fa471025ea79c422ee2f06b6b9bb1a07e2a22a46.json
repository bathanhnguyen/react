{"ast":null,"code":"// import axios from 'axios';\n// import React, { useState, useEffect } from 'react';\n\n// const BookingForm = () => {\n//     const [bookedDates, setBookedDates] = useState([]);\n//     const [bookingDate, setBookingDate] = useState(\"\");\n//     const [returnDate, setReturnDate] = useState(\"\");\n\n//     useEffect(() => {\n//         // Gọi API để lấy danh sách ngày đã đặt\n//         fetch(\"YOUR_API_ENDPOINT\")\n//             .then(response => response.json())\n//             .then(data => {\n//                 if (data.status === \"200\") {\n//                     setBookedDates(data.date);\n//                 }\n//             })\n//             .catch(error => {\n//                 console.error(\"Error fetching booked dates:\", error);\n//             });\n//     }, []);\n//     useEffect(() => {\n//         let config = {\n//             method: \"get\",\n//             maxBodyLength: Infinity,\n//             url: `http://localhost/car/KLTN/carrentalAPI/Get_DateBooking.php?vid=3`,\n//             headers: {},\n//         };\n\n//         axios\n//             .request(config)\n//             .then((response) => {\n\n//                 if (response.data.status === \"200\") {\n//                     setBookedDates(response.data.date);\n//                 }\n//             })\n//             .catch((error) => {\n//                 console.log(error);\n//             });\n//     }, []);\n\n//     const handleBookingDateChange = (event) => {\n//         setBookingDate(event.target.value);\n//     };\n\n//     const handleReturnDateChange = (event) => {\n//         setReturnDate(event.target.value);\n//     };\n\n//     const isDateBooked = (date) => {\n//         return bookedDates.includes(date);\n//     };\n\n//     const renderBookingDateOptions = () => {\n//         const options = [];\n//         for (let i = 0; i < 7; i++) {\n//             const currentDate = new Date();\n//             currentDate.setDate(currentDate.getDate() + i);\n//             const formattedDate = currentDate.toISOString().split('T')[0];\n//             if (isDateBooked(formattedDate)) {\n//                 options.push(<option disabled key={formattedDate}>{formattedDate} (Booked)</option>);\n//             } else {\n//                 options.push(<option key={formattedDate}>{formattedDate}</option>);\n//             }\n//         }\n//         return options;\n//     };\n\n//     const renderReturnDateOptions = () => {\n//         const options = [];\n//         const selectedBookingDate = new Date(bookingDate);\n//         for (let i = 0; i < 7; i++) {\n//             const currentDate = new Date(selectedBookingDate);\n//             currentDate.setDate(selectedBookingDate.getDate() + i);\n//             const formattedDate = currentDate.toISOString().split('T')[0];\n//             if (isDateBooked(formattedDate)) {\n//                 options.push(<option disabled key={formattedDate}>{formattedDate} (Booked)</option>);\n//             } else {\n//                 options.push(<option key={formattedDate}>{formattedDate}</option>);\n//             }\n//         }\n//         return options;\n//     };\n\n//     return (\n//         <div>\n//             <label htmlFor=\"booking_date\">Ngày đặt:</label>\n//             <select name=\"booking_date\" value={bookingDate} onChange={handleBookingDateChange}>\n//                 <option value=\"\">Chọn ngày đặt</option>\n//                 {renderBookingDateOptions()}\n//             </select>\n\n//             <label htmlFor=\"return_date\">Ngày trả:</label>\n//             <select name=\"return_date\" value={returnDate} onChange={handleReturnDateChange}>\n//                 <option value=\"\">Chọn ngày trả</option>\n//                 {renderReturnDateOptions()}\n//             </select>\n//         </div>\n//     );\n// };\n\n// export default BookingForm;\n\n// useEffect(() => {\n//     let config = {\n//         method: \"get\",\n//         maxBodyLength: Infinity,\n//         url: `http://localhost/car/KLTN/carrentalAPI/Get_DateBooking.php?vid=2`,\n//         headers: {},\n//     };\n\n//     axios\n//         .request(config)\n//         .then((response) => {\n//             // console.log(JSON.stringify(response));\n//             // setVehiclesBrand(response.data.carDetail[0].VehiclesBrand)\n//             if (response.data.status === \"200\") {\n//                 const bookedDateRanges = response.data.date.map((booking) => {\n//                     return {\n//                         fromDate: new Date(booking.FromDate),\n//                         toDate: new Date(booking.ToDate),\n//                     };\n//                 });\n//                 setBookedDates(bookedDateRanges);\n//             }\n//         })\n//         .catch((error) => {\n//             console.log(error);\n//         });\n// }, []);","map":{"version":3,"names":[],"sources":["C:/Users/win10/Desktop/Khoaluantotnghiep/KLTN-react/src/components/Pages/test.js"],"sourcesContent":["// import axios from 'axios';\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// const BookingForm = () => {\r\n//     const [bookedDates, setBookedDates] = useState([]);\r\n//     const [bookingDate, setBookingDate] = useState(\"\");\r\n//     const [returnDate, setReturnDate] = useState(\"\");\r\n\r\n//     useEffect(() => {\r\n//         // Gọi API để lấy danh sách ngày đã đặt\r\n//         fetch(\"YOUR_API_ENDPOINT\")\r\n//             .then(response => response.json())\r\n//             .then(data => {\r\n//                 if (data.status === \"200\") {\r\n//                     setBookedDates(data.date);\r\n//                 }\r\n//             })\r\n//             .catch(error => {\r\n//                 console.error(\"Error fetching booked dates:\", error);\r\n//             });\r\n//     }, []);\r\n//     useEffect(() => {\r\n//         let config = {\r\n//             method: \"get\",\r\n//             maxBodyLength: Infinity,\r\n//             url: `http://localhost/car/KLTN/carrentalAPI/Get_DateBooking.php?vid=3`,\r\n//             headers: {},\r\n//         };\r\n\r\n//         axios\r\n//             .request(config)\r\n//             .then((response) => {\r\n    \r\n//                 if (response.data.status === \"200\") {\r\n//                     setBookedDates(response.data.date);\r\n//                 }\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.log(error);\r\n//             });\r\n//     }, []);\r\n\r\n//     const handleBookingDateChange = (event) => {\r\n//         setBookingDate(event.target.value);\r\n//     };\r\n\r\n//     const handleReturnDateChange = (event) => {\r\n//         setReturnDate(event.target.value);\r\n//     };\r\n\r\n//     const isDateBooked = (date) => {\r\n//         return bookedDates.includes(date);\r\n//     };\r\n\r\n//     const renderBookingDateOptions = () => {\r\n//         const options = [];\r\n//         for (let i = 0; i < 7; i++) {\r\n//             const currentDate = new Date();\r\n//             currentDate.setDate(currentDate.getDate() + i);\r\n//             const formattedDate = currentDate.toISOString().split('T')[0];\r\n//             if (isDateBooked(formattedDate)) {\r\n//                 options.push(<option disabled key={formattedDate}>{formattedDate} (Booked)</option>);\r\n//             } else {\r\n//                 options.push(<option key={formattedDate}>{formattedDate}</option>);\r\n//             }\r\n//         }\r\n//         return options;\r\n//     };\r\n\r\n//     const renderReturnDateOptions = () => {\r\n//         const options = [];\r\n//         const selectedBookingDate = new Date(bookingDate);\r\n//         for (let i = 0; i < 7; i++) {\r\n//             const currentDate = new Date(selectedBookingDate);\r\n//             currentDate.setDate(selectedBookingDate.getDate() + i);\r\n//             const formattedDate = currentDate.toISOString().split('T')[0];\r\n//             if (isDateBooked(formattedDate)) {\r\n//                 options.push(<option disabled key={formattedDate}>{formattedDate} (Booked)</option>);\r\n//             } else {\r\n//                 options.push(<option key={formattedDate}>{formattedDate}</option>);\r\n//             }\r\n//         }\r\n//         return options;\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <label htmlFor=\"booking_date\">Ngày đặt:</label>\r\n//             <select name=\"booking_date\" value={bookingDate} onChange={handleBookingDateChange}>\r\n//                 <option value=\"\">Chọn ngày đặt</option>\r\n//                 {renderBookingDateOptions()}\r\n//             </select>\r\n\r\n//             <label htmlFor=\"return_date\">Ngày trả:</label>\r\n//             <select name=\"return_date\" value={returnDate} onChange={handleReturnDateChange}>\r\n//                 <option value=\"\">Chọn ngày trả</option>\r\n//                 {renderReturnDateOptions()}\r\n//             </select>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default BookingForm;\r\n\r\n\r\n\r\n\r\n\r\n// useEffect(() => {\r\n//     let config = {\r\n//         method: \"get\",\r\n//         maxBodyLength: Infinity,\r\n//         url: `http://localhost/car/KLTN/carrentalAPI/Get_DateBooking.php?vid=2`,\r\n//         headers: {},\r\n//     };\r\n\r\n//     axios\r\n//         .request(config)\r\n//         .then((response) => {\r\n//             // console.log(JSON.stringify(response));\r\n//             // setVehiclesBrand(response.data.carDetail[0].VehiclesBrand)\r\n//             if (response.data.status === \"200\") {\r\n//                 const bookedDateRanges = response.data.date.map((booking) => {\r\n//                     return {\r\n//                         fromDate: new Date(booking.FromDate),\r\n//                         toDate: new Date(booking.ToDate),\r\n//                     };\r\n//                 });\r\n//                 setBookedDates(bookedDateRanges);\r\n//             }\r\n//         })\r\n//         .catch((error) => {\r\n//             console.log(error);\r\n//         });\r\n// }, []);"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}