{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win10\\\\Desktop\\\\Khoaluantotnghiep\\\\KLTN-react\\\\src\\\\components\\\\Pages\\\\test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookingForm() {\n  _s();\n  const [fromDate, setFromDate] = useState(null);\n  const [toDate, setToDate] = useState(null);\n  const [bookedDates, setBookedDates] = useState([]);\n  useEffect(() => {\n    fetchBookedDates();\n  }, []);\n  const fetchBookedDates = () => {\n    // Gọi API và nhận phản hồi\n    // Đoạn mã này chỉ là một mô phỏng, bạn cần thay thế bằng kết nối thực tế đến API của bạn\n    const apiResponse = {\n      date: [\"2023-05-16\", \"2023-05-17\", \"2023-05-18\", \"2023-05-19\", \"2023-05-18\", \"2023-05-19\", \"2023-05-20\", \"2023-05-21\"],\n      status: '200'\n    };\n    if (apiResponse.status === '200') {\n      setBookedDates(apiResponse.date);\n    }\n  };\n  const handleFromDateChange = date => {\n    setFromDate(date);\n  };\n  const handleToDateChange = date => {\n    setToDate(date);\n  };\n  const handleBooking = () => {\n    console.log('From Date:', fromDate);\n    console.log('To Date:', toDate);\n  };\n  const isBookedDate = date => {\n    return bookedDates.includes(date);\n  };\n  const renderDay = day => {\n    const isBooked = isBookedDate(day.toISOString().split('T')[0]);\n    const isFutureDay = day > new Date();\n    const dayClassName = isBooked ? 'booked-day' : '';\n    const additionalClass = isFutureDay ? '' : 'disabled-day';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `custom-day ${dayClassName} ${additionalClass}`,\n      children: day.getDate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  };\n  const excludeDates = bookedDates.map(date => new Date(date));\n  const today = new Date();\n  const minDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Booking Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fromDate\",\n        children: \"From Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        id: \"fromDate\",\n        selected: fromDate,\n        onChange: handleFromDateChange,\n        renderDay: renderDay,\n        excludeDates: excludeDates,\n        minDate: minDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"toDate\",\n        children: \"To Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        id: \"toDate\",\n        selected: toDate,\n        onChange: handleToDateChange,\n        renderDay: renderDay,\n        excludeDates: excludeDates,\n        minDate: minDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBooking,\n      children: \"Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(BookingForm, \"XGZV2mww+5zkJLpl0dMP1XbZZUw=\");\n_c = BookingForm;\nexport default BookingForm;\n\n// useEffect(() => {\n//     let config = {\n//         method: \"get\",\n//         maxBodyLength: Infinity,\n//         url: `http://localhost/car/KLTN/carrentalAPI/Get_DateBooking.php?vid=2`,\n//         headers: {},\n//     };\n\n//     axios\n//         .request(config)\n//         .then((response) => {\n//             // console.log(JSON.stringify(response));\n//             // setVehiclesBrand(response.data.carDetail[0].VehiclesBrand)\n//             if (response.data.status === \"200\") {\n//                 const bookedDateRanges = response.data.date.map((booking) => {\n//                     return {\n//                         fromDate: new Date(booking.FromDate),\n//                         toDate: new Date(booking.ToDate),\n//                     };\n//                 });\n//                 setBookedDates(bookedDateRanges);\n//             }\n//         })\n//         .catch((error) => {\n//             console.log(error);\n//         });\n// }, []);\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","jsxDEV","_jsxDEV","BookingForm","_s","fromDate","setFromDate","toDate","setToDate","bookedDates","setBookedDates","fetchBookedDates","apiResponse","date","status","handleFromDateChange","handleToDateChange","handleBooking","console","log","isBookedDate","includes","renderDay","day","isBooked","toISOString","split","isFutureDay","Date","dayClassName","additionalClass","className","children","getDate","fileName","_jsxFileName","lineNumber","columnNumber","excludeDates","map","today","minDate","getFullYear","getMonth","htmlFor","id","selected","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/win10/Desktop/Khoaluantotnghiep/KLTN-react/src/components/Pages/test.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction BookingForm() {\r\n    const [fromDate, setFromDate] = useState(null);\r\n    const [toDate, setToDate] = useState(null);\r\n    const [bookedDates, setBookedDates] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchBookedDates();\r\n    }, []);\r\n\r\n    const fetchBookedDates = () => {\r\n        // Gọi API và nhận phản hồi\r\n        // Đoạn mã này chỉ là một mô phỏng, bạn cần thay thế bằng kết nối thực tế đến API của bạn\r\n        const apiResponse = {\r\n            date: [\"2023-05-16\", \"2023-05-17\", \"2023-05-18\", \"2023-05-19\", \"2023-05-18\", \"2023-05-19\", \"2023-05-20\", \"2023-05-21\"],\r\n            status: '200',\r\n        };\r\n\r\n        if (apiResponse.status === '200') {\r\n            setBookedDates(apiResponse.date);\r\n        }\r\n    };\r\n\r\n    const handleFromDateChange = (date) => {\r\n        setFromDate(date);\r\n    };\r\n\r\n    const handleToDateChange = (date) => {\r\n        setToDate(date);\r\n    };\r\n\r\n    const handleBooking = () => {\r\n        console.log('From Date:', fromDate);\r\n        console.log('To Date:', toDate);\r\n    };\r\n\r\n    const isBookedDate = (date) => {\r\n        return bookedDates.includes(date);\r\n    };\r\n\r\n    const renderDay = (day) => {\r\n        const isBooked = isBookedDate(day.toISOString().split('T')[0]);\r\n        const isFutureDay = day > new Date();\r\n\r\n        const dayClassName = isBooked ? 'booked-day' : '';\r\n        const additionalClass = isFutureDay ? '' : 'disabled-day';\r\n\r\n        return (\r\n            <div className={`custom-day ${dayClassName} ${additionalClass}`}>\r\n                {day.getDate()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const excludeDates = bookedDates.map(date => new Date(date));\r\n    const today = new Date();\r\n    const minDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n\r\n    return (\r\n        <div>\r\n            <h3>Booking Form</h3>\r\n            <div>\r\n                <label htmlFor=\"fromDate\">From Date:</label>\r\n                <DatePicker\r\n                    id=\"fromDate\"\r\n                    selected={fromDate}\r\n                    onChange={handleFromDateChange}\r\n                    renderDay={renderDay}\r\n                    excludeDates={excludeDates}\r\n                    minDate={minDate}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"toDate\">To Date:</label>\r\n                <DatePicker\r\n                    id=\"toDate\"\r\n                    selected={toDate}\r\n                    onChange={handleToDateChange}\r\n                    renderDay={renderDay}\r\n                    excludeDates={excludeDates}\r\n                    minDate={minDate}\r\n                />\r\n            </div>\r\n            <button onClick={handleBooking}>Booking</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BookingForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// useEffect(() => {\r\n//     let config = {\r\n//         method: \"get\",\r\n//         maxBodyLength: Infinity,\r\n//         url: `http://localhost/car/KLTN/carrentalAPI/Get_DateBooking.php?vid=2`,\r\n//         headers: {},\r\n//     };\r\n\r\n//     axios\r\n//         .request(config)\r\n//         .then((response) => {\r\n//             // console.log(JSON.stringify(response));\r\n//             // setVehiclesBrand(response.data.carDetail[0].VehiclesBrand)\r\n//             if (response.data.status === \"200\") {\r\n//                 const bookedDateRanges = response.data.date.map((booking) => {\r\n//                     return {\r\n//                         fromDate: new Date(booking.FromDate),\r\n//                         toDate: new Date(booking.ToDate),\r\n//                     };\r\n//                 });\r\n//                 setBookedDates(bookedDateRanges);\r\n//             }\r\n//         })\r\n//         .catch((error) => {\r\n//             console.log(error);\r\n//         });\r\n// }, []);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}