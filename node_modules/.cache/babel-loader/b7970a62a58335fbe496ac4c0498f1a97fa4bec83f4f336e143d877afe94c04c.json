{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win10\\\\Desktop\\\\Khoaluantotnghiep\\\\KLTN-react\\\\src\\\\components\\\\Pages\\\\test.js\",\n  _s = $RefreshSig$();\n// import axios from 'axios';\n// import React, { useState, useEffect } from 'react';\n// import DatePicker from 'react-datepicker';\n// import 'react-datepicker/dist/react-datepicker.css';\n// import styled from 'styled-components';\n\n// function BookingForm() {\n//     const [fromDateTime, setFromDateTime] = useState(null);\n//     const [toDateTime, setToDateTime] = useState(null);\n//     const [bookedDates, setBookedDates] = useState([]);\n\n//     useEffect(() => {\n//         let config = {\n//             method: 'get',\n//             maxBodyLength: Infinity,\n//             url: 'http://localhost/car/KLTN/carrentalAPI/Get_DateBooking.php?vid=2',\n//             headers: {},\n//         };\n\n//         axios\n//             .request(config)\n//             .then((response) => {\n//                 if (response.data.status === '200') {\n//                     setBookedDates(response.data.date);\n//                 }\n//             })\n//             .catch((error) => {\n//                 console.log(error);\n//             });\n//     }, []);\n\n//     const handleDateTimeChange = (selectedDateTime, field) => {\n//         if (field === 'from') {\n//             setFromDateTime(selectedDateTime);\n//             setToDateTime(null); // Reset toDateTime when changing fromDateTime\n//         } else if (field === 'to') {\n//             setToDateTime(selectedDateTime);\n//         }\n//     };\n\n//     const handleBooking = () => {\n//         console.log('From Date/Time:', fromDateTime);\n//         console.log('To Date/Time:', toDateTime);\n//     };\n\n//     const isBookedDateTime = (dateTime) => {\n//         return bookedDates.includes(dateTime.toISOString());\n//     };\n\n//     const renderDateTime = (dateTime) => {\n//         const isBooked = isBookedDateTime(dateTime.toISOString());\n//         const isFutureDateTime = dateTime > new Date();\n\n//         const dateTimeClassName = isBooked ? 'booked-date-time' : '';\n//         const additionalClass = isFutureDateTime ? '' : 'disabled-date-time';\n\n//         return (\n//             <div className={`custom-date-time ${dateTimeClassName} ${additionalClass}`}>\n//                 {dateTime.toLocaleString()}\n//             </div>\n//         );\n//     };\n\n//     const excludeDates = bookedDates.map((dateTime) => new Date(dateTime));\n//     const today = new Date();\n//     const minDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n\n//     const filterPassedDateTime = (dateTime) => {\n//         return dateTime > fromDateTime || !fromDateTime; // Hiển thị ngày/giờ sau fromDateTime hoặc không có fromDateTime\n//     };\n\n//     return (\n//         <BookDiv>\n//             <div className=\"form-group\">\n//                 <label>From Date/Time:</label>\n//                 <DatePicker\n//                     selected={fromDateTime}\n//                     minDate={minDate}\n//                     startDate={fromDateTime}\n//                     endDate={toDateTime}\n//                     onChange={(date) => handleDateTimeChange(date, 'from')}\n//                     renderDay={renderDateTime}\n//                     excludeDates={excludeDates}\n//                     className=\"form-control\"\n//                     placeholderText=\"Chọn ngày/giờ nhận xe\"\n//                     showTimeSelect\n//                     dateFormat=\"MMMM d, yyyy h:mm aa\"\n//                 />\n//             </div>\n//             <div className=\"form-group\">\n//                 <label>To Date/Time:</label>\n//                 <DatePicker\n//                     selected={toDateTime}\n//                     minDate={fromDateTime || minDate} // Chỉ cho phép chọn ngày từ fromDateTime trở đi\n//                     startDate={fromDateTime}\n//                     endDate={toDateTime}\n//                     onChange={(date) => handleDateTimeChange(date, 'to')}\n//                     renderDay={renderDateTime}\n//                     className=\"form-control\"\n//                     placeholderText=\"Chọn ngày/giờ trả xe\"\n//                     filterDate={filterPassedDateTime}\n//                     showTimeSelect\n//                     dateFormat=\"MMMM d, yyyy h:mm aa\"\n//                 />\n//             </div>\n//             <button onClick={handleBooking}>Booking</button>\n//         </BookDiv>\n//     );\n// }\n\n// const BookDiv = styled.div`\n//   .form-group {\n//     margin-bottom: 1rem;\n//   }\n\n//   .form-label {\n//     margin-bottom: 0.5rem;\n//   }\n\n//   .form-control {\n//     border: 1px solid #ced4da;\n//     border-radius: 0.25rem;\n//     padding: 0.375rem 0.75rem;\n//     line-height: 1.5;\n//   }\n\n//   .custom-date-time.disabled-date-time {\n//     background-color: #f8d7da;\n//     color: #721c24;\n//     cursor: not-allowed;\n//     text-decoration: line-through;\n//     color: red;\n//   }\n// `;\n\n// export default BookingForm;\n\nimport Mic from \"../Header/microphone-black-shape.svg\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { InfoContext } from '../../contextProvider/ProviderInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    searchValue\n  } = useContext(InfoContext);\n  const location = useLocation();\n  const searchRedirect = useNavigate();\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const startRecognition = () => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = false;\n    recognition.interimResults = false;\n    recognition.lang = 'vi-VN';\n    recognition.onstart = () => {\n      setIsListening(true);\n    };\n    recognition.onresult = event => {\n      const speechToText = event.results[0][0].transcript;\n      setTranscript(speechToText);\n    };\n    recognition.onerror = event => {\n      console.error('Lỗi nhận dạng giọng nói:', event.error);\n    };\n    recognition.onend = () => {\n      recognition.stop();\n      setIsListening(false);\n    };\n    recognition.start();\n  };\n  useEffect(() => {\n    if (transcript !== '') {\n      searchValue.set('searchValue', {\n        search: transcript\n      }, {\n        path: '/'\n      });\n      if (location.pathname === '/Carlisting') {\n        window.location.reload();\n      } else {\n        searchRedirect('/Carlisting');\n      }\n    }\n  }, [transcript, searchValue, location.pathname, searchRedirect]);\n  const handleStartRecognition = () => {\n    setIsListening(true);\n    startRecognition();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u1EE8ng d\\u1EE5ng Nh\\u1EADn d\\u1EA1ng Gi\\u1ECDng n\\xF3i\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), !isListening && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRecognition,\n      children: \"B\\u1EAFt \\u0111\\u1EA7u Nh\\u1EADn d\\u1EA1ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }, this), isListening && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: `microphone ${isListening && \"isListening\"}`,\n        src: Mic,\n        alt: \"microphone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this), \"        \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: transcript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"lCLSGQL2Z5nLfYm6g5JfWgBTy60=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Mic","React","useContext","useEffect","useState","useLocation","useNavigate","InfoContext","jsxDEV","_jsxDEV","App","_s","searchValue","location","searchRedirect","transcript","setTranscript","isListening","setIsListening","startRecognition","recognition","window","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onresult","event","speechToText","results","onerror","console","error","onend","stop","start","set","search","path","pathname","reload","handleStartRecognition","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/win10/Desktop/Khoaluantotnghiep/KLTN-react/src/components/Pages/test.js"],"sourcesContent":["// import axios from 'axios';\r\n// import React, { useState, useEffect } from 'react';\r\n// import DatePicker from 'react-datepicker';\r\n// import 'react-datepicker/dist/react-datepicker.css';\r\n// import styled from 'styled-components';\r\n\r\n// function BookingForm() {\r\n//     const [fromDateTime, setFromDateTime] = useState(null);\r\n//     const [toDateTime, setToDateTime] = useState(null);\r\n//     const [bookedDates, setBookedDates] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         let config = {\r\n//             method: 'get',\r\n//             maxBodyLength: Infinity,\r\n//             url: 'http://localhost/car/KLTN/carrentalAPI/Get_DateBooking.php?vid=2',\r\n//             headers: {},\r\n//         };\r\n\r\n//         axios\r\n//             .request(config)\r\n//             .then((response) => {\r\n//                 if (response.data.status === '200') {\r\n//                     setBookedDates(response.data.date);\r\n//                 }\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.log(error);\r\n//             });\r\n//     }, []);\r\n\r\n//     const handleDateTimeChange = (selectedDateTime, field) => {\r\n//         if (field === 'from') {\r\n//             setFromDateTime(selectedDateTime);\r\n//             setToDateTime(null); // Reset toDateTime when changing fromDateTime\r\n//         } else if (field === 'to') {\r\n//             setToDateTime(selectedDateTime);\r\n//         }\r\n//     };\r\n\r\n//     const handleBooking = () => {\r\n//         console.log('From Date/Time:', fromDateTime);\r\n//         console.log('To Date/Time:', toDateTime);\r\n//     };\r\n\r\n//     const isBookedDateTime = (dateTime) => {\r\n//         return bookedDates.includes(dateTime.toISOString());\r\n//     };\r\n\r\n//     const renderDateTime = (dateTime) => {\r\n//         const isBooked = isBookedDateTime(dateTime.toISOString());\r\n//         const isFutureDateTime = dateTime > new Date();\r\n\r\n//         const dateTimeClassName = isBooked ? 'booked-date-time' : '';\r\n//         const additionalClass = isFutureDateTime ? '' : 'disabled-date-time';\r\n\r\n//         return (\r\n//             <div className={`custom-date-time ${dateTimeClassName} ${additionalClass}`}>\r\n//                 {dateTime.toLocaleString()}\r\n//             </div>\r\n//         );\r\n//     };\r\n\r\n//     const excludeDates = bookedDates.map((dateTime) => new Date(dateTime));\r\n//     const today = new Date();\r\n//     const minDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n\r\n//     const filterPassedDateTime = (dateTime) => {\r\n//         return dateTime > fromDateTime || !fromDateTime; // Hiển thị ngày/giờ sau fromDateTime hoặc không có fromDateTime\r\n//     };\r\n\r\n//     return (\r\n//         <BookDiv>\r\n//             <div className=\"form-group\">\r\n//                 <label>From Date/Time:</label>\r\n//                 <DatePicker\r\n//                     selected={fromDateTime}\r\n//                     minDate={minDate}\r\n//                     startDate={fromDateTime}\r\n//                     endDate={toDateTime}\r\n//                     onChange={(date) => handleDateTimeChange(date, 'from')}\r\n//                     renderDay={renderDateTime}\r\n//                     excludeDates={excludeDates}\r\n//                     className=\"form-control\"\r\n//                     placeholderText=\"Chọn ngày/giờ nhận xe\"\r\n//                     showTimeSelect\r\n//                     dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n//                 />\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//                 <label>To Date/Time:</label>\r\n//                 <DatePicker\r\n//                     selected={toDateTime}\r\n//                     minDate={fromDateTime || minDate} // Chỉ cho phép chọn ngày từ fromDateTime trở đi\r\n//                     startDate={fromDateTime}\r\n//                     endDate={toDateTime}\r\n//                     onChange={(date) => handleDateTimeChange(date, 'to')}\r\n//                     renderDay={renderDateTime}\r\n//                     className=\"form-control\"\r\n//                     placeholderText=\"Chọn ngày/giờ trả xe\"\r\n//                     filterDate={filterPassedDateTime}\r\n//                     showTimeSelect\r\n//                     dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n//                 />\r\n//             </div>\r\n//             <button onClick={handleBooking}>Booking</button>\r\n//         </BookDiv>\r\n//     );\r\n// }\r\n\r\n// const BookDiv = styled.div`\r\n//   .form-group {\r\n//     margin-bottom: 1rem;\r\n//   }\r\n\r\n//   .form-label {\r\n//     margin-bottom: 0.5rem;\r\n//   }\r\n\r\n//   .form-control {\r\n//     border: 1px solid #ced4da;\r\n//     border-radius: 0.25rem;\r\n//     padding: 0.375rem 0.75rem;\r\n//     line-height: 1.5;\r\n//   }\r\n\r\n//   .custom-date-time.disabled-date-time {\r\n//     background-color: #f8d7da;\r\n//     color: #721c24;\r\n//     cursor: not-allowed;\r\n//     text-decoration: line-through;\r\n//     color: red;\r\n//   }\r\n// `;\r\n\r\n// export default BookingForm;\r\n\r\n\r\n\r\nimport Mic from \"../Header/microphone-black-shape.svg\";\r\n\r\n\r\n\r\n\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { InfoContext } from '../../contextProvider/ProviderInfo';\r\n\r\nfunction App() {\r\n    const { searchValue } = useContext(InfoContext);\r\n    const location = useLocation();\r\n    const searchRedirect = useNavigate();\r\n\r\n    const [transcript, setTranscript] = useState('');\r\n    const [isListening, setIsListening] = useState(false);\r\n\r\n    const startRecognition = () => {\r\n        const recognition = new window.webkitSpeechRecognition();\r\n        recognition.continuous = false;\r\n        recognition.interimResults = false;\r\n        recognition.lang = 'vi-VN';\r\n\r\n        recognition.onstart = () => {\r\n            setIsListening(true);\r\n        };\r\n\r\n        recognition.onresult = (event) => {\r\n            const speechToText = event.results[0][0].transcript;\r\n            setTranscript(speechToText);\r\n        };\r\n\r\n        recognition.onerror = (event) => {\r\n            console.error('Lỗi nhận dạng giọng nói:', event.error);\r\n        };\r\n\r\n        recognition.onend = () => {\r\n            recognition.stop();\r\n            setIsListening(false);\r\n        };\r\n\r\n        recognition.start();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (transcript !== '') {\r\n            searchValue.set('searchValue', { search: transcript }, { path: '/' });\r\n\r\n            if (location.pathname === '/Carlisting') {\r\n                window.location.reload();\r\n            } else {\r\n                searchRedirect('/Carlisting');\r\n            }\r\n        }\r\n    }, [transcript, searchValue, location.pathname, searchRedirect]);\r\n\r\n    const handleStartRecognition = () => {\r\n        setIsListening(true);\r\n        startRecognition();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Ứng dụng Nhận dạng Giọng nói</h1>\r\n            {!isListening && (\r\n                <button onClick={handleStartRecognition}>Bắt đầu Nhận dạng</button>\r\n            )}\r\n            {isListening && (\r\n                <div>\r\n                    <img\r\n                        className={`microphone ${isListening && \"isListening\"}`}\r\n                        src={Mic}\r\n                        alt=\"microphone\"\r\n                    />        </div>\r\n            )}\r\n            <p>{transcript}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}