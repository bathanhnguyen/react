{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win10\\\\Desktop\\\\Khoaluantotnghiep\\\\KLTN-react\\\\src\\\\components\\\\ThongKe\\\\Ngay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [selectedOption, setSelectedOption] = useState('day');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost/car/KLTN/carrentalAPI/admin/ThongKe.php');\n        const thongkeData = response.data.thongke || [];\n        setData(thongkeData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const filterData = () => {\n      let filtered = [];\n      if (selectedOption === 'day') {\n        // Thống kê theo ngày\n        filtered = data.reduce((result, current) => {\n          const date = new Date(current.LastUpdationDate);\n          const day = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n          const existingDay = result.find(item => item.date === day);\n          if (existingDay) {\n            existingDay.amount += Number(current.amount);\n          } else {\n            result.push({\n              date: day,\n              amount: Number(current.amount)\n            });\n          }\n          return result;\n        }, []);\n      } else if (selectedOption === 'week') {\n        // Thống kê theo tuần\n        filtered = data.reduce((result, current) => {\n          const date = new Date(current.LastUpdationDate);\n          const week = getWeekNumber(date);\n          const year = date.getFullYear();\n          const weekString = `${year}-W${week.toString().padStart(2, '0')}`;\n          const existingWeek = result.find(item => item.date === weekString);\n          if (existingWeek) {\n            existingWeek.amount += Number(current.amount);\n          } else {\n            result.push({\n              date: weekString,\n              amount: Number(current.amount)\n            });\n          }\n          return result;\n        }, []);\n      } else if (selectedOption === 'month') {\n        // Thống kê theo tháng\n        filtered = data.reduce((result, current) => {\n          const date = new Date(current.LastUpdationDate);\n          const month = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}`;\n          const existingMonth = result.find(item => item.date === month);\n          if (existingMonth) {\n            existingMonth.amount += Number(current.amount);\n          } else {\n            result.push({\n              date: month,\n              amount: Number(current.amount)\n            });\n          }\n          return result;\n        }, []);\n      } else if (selectedOption === 'quarter') {\n        // Thống kê theo quý\n        filtered = data.reduce((result, current) => {\n          const date = new Date(current.LastUpdationDate);\n          const quarter = getQuarter(date);\n          const year = date.getFullYear();\n          const quarterString = `${year}-Q${quarter}`;\n          const existingQuarter = result.find(item => item.date === quarterString);\n          if (existingQuarter) {\n            existingQuarter.amount += Number(current.amount);\n          } else {\n            result.push({\n              date: quarterString,\n              amount: Number(current.amount)\n            });\n          }\n          return result;\n        }, []);\n      } else if (selectedOption === 'year') {\n        // Thống kê theo năm\n        filtered = data.reduce((result, current) => {\n          const date = new Date(current.LastUpdationDate);\n          const year = date.getFullYear();\n          const existingYear = result.find(item => item.date === year.toString());\n          if (existingYear) {\n            existingYear.amount += Number(current.amount);\n          } else {\n            result.push({\n              date: year.toString(),\n              amount: Number(current.amount)\n            });\n          }\n          return result;\n        }, []);\n      }\n      setFilteredData(filtered);\n    };\n    filterData();\n  }, [data, selectedOption]);\n\n  // Hàm lấy tuần\n  const getWeekNumber = date => {\n    const onejan = new Date(date.getFullYear(), 0, 1);\n    const millisecsInDay = 86400000;\n    return Math.ceil(((date - onejan) / millisecsInDay + onejan.getDay() + 1) / 7);\n  };\n\n  // Hàm lấy quý\n  const getQuarter = date => {\n    const month = date.getMonth() + 1;\n    return Math.ceil(month / 3);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Th\\u1ED1ng k\\xEA doanh thu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"day\",\n          checked: selectedOption === 'day',\n          onChange: () => setSelectedOption('day')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), \"Ng\\xE0y\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"week\",\n          checked: selectedOption === 'week',\n          onChange: () => setSelectedOption('week')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), \"Tu\\u1EA7n\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"month\",\n          checked: selectedOption === 'month',\n          onChange: () => setSelectedOption('month')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), \"Th\\xE1ng\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"quarter\",\n          checked: selectedOption === 'quarter',\n          onChange: () => setSelectedOption('quarter')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), \"Qu\\xFD\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"year\",\n          checked: selectedOption === 'year',\n          onChange: () => setSelectedOption('year')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), \"N\\u0103m\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: filteredData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"amount\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n_s(Chart, \"p7VzgR0V33KveOzrMTS91I+sTfk=\");\n_c = Chart;\nexport default Chart;\n\n///  Thống kê xe ....\n\n// import React from 'react';\n// import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\n// const Chart = () => {\n//     const data = [\n//         { date: '2023-07-06', idcar: 1 },\n//         { date: '2023-08-06', idcar: 1 },\n//         { date: '2023-05-07', idcar: 2 },\n//         { date: '2023-05-07', idcar: 2 },\n//         { date: '2023-05-07', idcar: 2 },\n//         { date: '2023-05-07', idcar: 2 },\n//         { date: '2023-05-05', idcar: 1 },\n//         { date: '2023-06-05', idcar: 4 },\n//     ];\n\n//     // Tính toán số lần thuê của mỗi xe trong ngày\n//     const countRentalsPerCar = {};\n//     data.forEach(item => {\n//         if (countRentalsPerCar[item.idcar]) {\n//             countRentalsPerCar[item.idcar] += 1;\n//         } else {\n//             countRentalsPerCar[item.idcar] = 1;\n//         }\n//     });\n\n//     // Chuẩn bị dữ liệu cho biểu đồ\n//     const chartData = Object.keys(countRentalsPerCar).map(idcar => ({\n//         idcar: idcar,\n//         count: countRentalsPerCar[idcar],\n//     }));\n\n//     return (\n//         <div>\n//             <h1>Biểu đồ thống kê số xe được thuê trong ngày</h1>\n//             <BarChart width={600} height={300} data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n//                 <CartesianGrid strokeDasharray=\"3 3\" />\n//                 <XAxis dataKey=\"idcar\" />\n//                 <YAxis />\n//                 <Tooltip />\n//                 <Legend />\n//                 <Bar dataKey=\"count\" fill=\"#8884d8\" />\n//             </BarChart>\n//         </div>\n//     );\n// };\n\n// export default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useEffect","useState","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","axios","jsxDEV","_jsxDEV","Chart","_s","data","setData","filteredData","setFilteredData","selectedOption","setSelectedOption","fetchData","response","get","thongkeData","thongke","error","console","log","filterData","filtered","reduce","result","current","date","Date","LastUpdationDate","day","getFullYear","getMonth","toString","padStart","getDate","existingDay","find","item","amount","Number","push","week","getWeekNumber","year","weekString","existingWeek","month","existingMonth","quarter","getQuarter","quarterString","existingQuarter","existingYear","onejan","millisecsInDay","Math","ceil","getDay","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginLeft","type","value","checked","onChange","width","height","strokeDasharray","dataKey","fill","_c","$RefreshReg$"],"sources":["C:/Users/win10/Desktop/Khoaluantotnghiep/KLTN-react/src/components/ThongKe/Ngay.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport axios from 'axios';\r\n\r\nconst Chart = () => {\r\n    const [data, setData] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [selectedOption, setSelectedOption] = useState('day');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost/car/KLTN/carrentalAPI/admin/ThongKe.php');\r\n                const thongkeData = response.data.thongke || [];\r\n                setData(thongkeData);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const filterData = () => {\r\n            let filtered = [];\r\n\r\n            if (selectedOption === 'day') {\r\n                // Thống kê theo ngày\r\n                filtered = data.reduce((result, current) => {\r\n                    const date = new Date(current.LastUpdationDate);\r\n                    const day = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\r\n\r\n                    const existingDay = result.find(item => item.date === day);\r\n                    if (existingDay) {\r\n                        existingDay.amount += Number(current.amount);\r\n                    } else {\r\n                        result.push({ date: day, amount: Number(current.amount) });\r\n                    }\r\n\r\n                    return result;\r\n                }, []);\r\n            } else if (selectedOption === 'week') {\r\n                // Thống kê theo tuần\r\n                filtered = data.reduce((result, current) => {\r\n                    const date = new Date(current.LastUpdationDate);\r\n                    const week = getWeekNumber(date);\r\n                    const year = date.getFullYear();\r\n                    const weekString = `${year}-W${week.toString().padStart(2, '0')}`;\r\n\r\n                    const existingWeek = result.find(item => item.date === weekString);\r\n                    if (existingWeek) {\r\n                        existingWeek.amount += Number(current.amount);\r\n                    } else {\r\n                        result.push({ date: weekString, amount: Number(current.amount) });\r\n                    }\r\n\r\n                    return result;\r\n                }, []);\r\n            } else if (selectedOption === 'month') {\r\n                // Thống kê theo tháng\r\n                filtered = data.reduce((result, current) => {\r\n                    const date = new Date(current.LastUpdationDate);\r\n                    const month = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}`;\r\n\r\n                    const existingMonth = result.find(item => item.date === month);\r\n                    if (existingMonth) {\r\n                        existingMonth.amount += Number(current.amount);\r\n                    } else {\r\n                        result.push({ date: month, amount: Number(current.amount) });\r\n                    }\r\n\r\n                    return result;\r\n                }, []);\r\n            } else if (selectedOption === 'quarter') {\r\n                // Thống kê theo quý\r\n                filtered = data.reduce((result, current) => {\r\n                    const date = new Date(current.LastUpdationDate);\r\n                    const quarter = getQuarter(date);\r\n                    const year = date.getFullYear();\r\n                    const quarterString = `${year}-Q${quarter}`;\r\n\r\n                    const existingQuarter = result.find(item => item.date === quarterString);\r\n                    if (existingQuarter) {\r\n                        existingQuarter.amount += Number(current.amount);\r\n                    } else {\r\n                        result.push({ date: quarterString, amount: Number(current.amount) });\r\n                    }\r\n\r\n                    return result;\r\n                }, []);\r\n            } else if (selectedOption === 'year') {\r\n                // Thống kê theo năm\r\n                filtered = data.reduce((result, current) => {\r\n                    const date = new Date(current.LastUpdationDate);\r\n                    const year = date.getFullYear();\r\n\r\n                    const existingYear = result.find(item => item.date === year.toString());\r\n                    if (existingYear) {\r\n                        existingYear.amount += Number(current.amount);\r\n                    } else {\r\n                        result.push({ date: year.toString(), amount: Number(current.amount) });\r\n                    }\r\n\r\n                    return result;\r\n                }, []);\r\n            }\r\n\r\n            setFilteredData(filtered);\r\n        };\r\n\r\n        filterData();\r\n    }, [data, selectedOption]);\r\n\r\n    // Hàm lấy tuần\r\n    const getWeekNumber = (date) => {\r\n        const onejan = new Date(date.getFullYear(), 0, 1);\r\n        const millisecsInDay = 86400000;\r\n        return Math.ceil(((date - onejan) / millisecsInDay + onejan.getDay() + 1) / 7);\r\n    };\r\n\r\n    // Hàm lấy quý\r\n    const getQuarter = (date) => {\r\n        const month = date.getMonth() + 1;\r\n        return Math.ceil(month / 3);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h3>Thống kê doanh thu</h3>\r\n                <label style={{ marginLeft: \"10px\" }}>\r\n                    <input type=\"radio\" value=\"day\" checked={selectedOption === 'day'} onChange={() => setSelectedOption('day')} />\r\n                    Ngày\r\n                </label >\r\n                <label style={{ marginLeft: \"10px\" }}>\r\n                    <input type=\"radio\" value=\"week\" checked={selectedOption === 'week'} onChange={() => setSelectedOption('week')} />\r\n                    Tuần\r\n                </label>\r\n                <label style={{ marginLeft: \"10px\" }}>\r\n                    <input type=\"radio\" value=\"month\" checked={selectedOption === 'month'} onChange={() => setSelectedOption('month')} />\r\n                    Tháng\r\n                </label>\r\n                <label style={{ marginLeft: \"10px\" }}>\r\n                    <input type=\"radio\" value=\"quarter\" checked={selectedOption === 'quarter'} onChange={() => setSelectedOption('quarter')} />\r\n                    Quý\r\n                </label>\r\n                <label style={{ marginLeft: \"10px\" }}>\r\n                    <input type=\"radio\" value=\"year\" checked={selectedOption === 'year'} onChange={() => setSelectedOption('year')} />\r\n                    Năm\r\n                </label>\r\n            </div>\r\n\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n                <BarChart data={filteredData}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar dataKey=\"amount\" fill=\"#8884d8\" />\r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;\r\n\r\n\r\n///  Thống kê xe ....\r\n\r\n// import React from 'react';\r\n// import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\n// const Chart = () => {\r\n//     const data = [\r\n//         { date: '2023-07-06', idcar: 1 },\r\n//         { date: '2023-08-06', idcar: 1 },\r\n//         { date: '2023-05-07', idcar: 2 },\r\n//         { date: '2023-05-07', idcar: 2 },\r\n//         { date: '2023-05-07', idcar: 2 },\r\n//         { date: '2023-05-07', idcar: 2 },\r\n//         { date: '2023-05-05', idcar: 1 },\r\n//         { date: '2023-06-05', idcar: 4 },\r\n//     ];\r\n\r\n//     // Tính toán số lần thuê của mỗi xe trong ngày\r\n//     const countRentalsPerCar = {};\r\n//     data.forEach(item => {\r\n//         if (countRentalsPerCar[item.idcar]) {\r\n//             countRentalsPerCar[item.idcar] += 1;\r\n//         } else {\r\n//             countRentalsPerCar[item.idcar] = 1;\r\n//         }\r\n//     });\r\n\r\n//     // Chuẩn bị dữ liệu cho biểu đồ\r\n//     const chartData = Object.keys(countRentalsPerCar).map(idcar => ({\r\n//         idcar: idcar,\r\n//         count: countRentalsPerCar[idcar],\r\n//     }));\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1>Biểu đồ thống kê số xe được thuê trong ngày</h1>\r\n//             <BarChart width={600} height={300} data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n//                 <CartesianGrid strokeDasharray=\"3 3\" />\r\n//                 <XAxis dataKey=\"idcar\" />\r\n//                 <YAxis />\r\n//                 <Tooltip />\r\n//                 <Legend />\r\n//                 <Bar dataKey=\"count\" fill=\"#8884d8\" />\r\n//             </BarChart>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Chart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}